{"version":3,"sources":["img/logo.jpg","components/header/HeaderComponent.js","components/menu/MenuComponent.js","js/actions/index.js","data/colors.js","components/order/goodsInfo/chair/ChairComponent.js","components/order/goodsInfo/firstPillow/FirstPillowComponent.js","components/order/goodsInfo/secondPillow/SecondPillowComponent.js","components/order/goodsInfo/table/TableOrderComponent.js","components/order/note/NoteComponent.js","components/order/OrderComponent.js","components/feedbacks/FeedbacksComponent.js","components/main/MainPageComponent.js","App.js","serviceWorker.js","js/reducers/checkGoods.js","js/reducers/countOfGoods.js","js/reducers/colorOfGoods.js","js/reducers/countCost.js","js/reducers/order.js","js/reducers/feedbacks.js","js/reducers/index.js","js/store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderComponent","react_default","a","createElement","className","Link","to","src","require","MenuComponent","_ref","location","pathname","value","HOST","changeCountOfChairs","count","type","changeCountOfFirstPillow","changeCountOfSecondPillow","chooseCountChairColors","chairColors","color","name","pillowColors","ChairComponent","state","isChairColorsShown","isChairLegColorsShown","chairColor","chairLegColor","chooseColorForChair","_this","props","chooseChairColor","showChairColors","setState","chooseColorForChairLeg","chooseChairLegColor","showChairLegColors","toChangeCountOfChairs","event","target","toCountCostOfChair","isChairChecked","cost","chairPrice","Number","countOfChairs","countChairCost","toCheckChair","checkChair","prevState","handleChangeColorsOfChair","val","this","_this2","blockOfChairColors","map","item","index","key","style","backgroundColor","onClick","blockOfChairLegsColors","_this$props","onChange","countColorsOfChair","concat","checked","Component","Chair","connect","countOfGoodsReducer","checkGoodsReducer","colorReducer","Object","defineProperty","dispatch","FirstPillowComponent","isColorsShown","firstPillowColor","chooseColorForFirstPillow","chooseFirstPillowColor","showColorsOfFirstPillow","toChangeCountOfFirstPillow","e","toCheckFirstPillow","checkFirstPillow","toCountCostOfFirstPillow","isFirstPillowChecked","firstPillowPrice","countOfFirstPillow","countFirstPillowCost","blockOfColors","FirstPillow","SecondPillowComponent","secondPillowColor","chooseColorForSecondPillow","chooseSecondPillowColor","showColorsOfSecondPillow","toChangeCountOfSecondPillow","toCheckSecondPillow","checkSecondPillow","toCountCostOfSecondPillow","isSecondPillowChecked","secondPillowPrice","countOfSecondPillow","countSecondPillowCost","SecondPillow","TableOrderComponent","cols","chair_ChairComponent","firstPillow_FirstPillowComponent","secondPillow_SecondPillowComponent","colSpan","getTotalAmount","Note","orderStatus","makeOrderReducer","showNote","toString","search","OrderComponent","firstName","secondName","phoneNumber","mail","city","street","houseNumber","flatNumber","deliveryDate","deliveryMethod","comments","isOrderSent","clearForm","costOfChair","costOfFirstPillow","costOfSecondPillow","secondNameChange","inputedSecondName","firstNameChange","inputedFirstName","phoneNumberChange","inputedPhoneNumber","mailChange","inputedMail","cityChange","inputedCity","houseNumberChange","inputedHouseNumber","flatNumberChange","inputedFlatNumber","streetChange","inputedStreet","chooseDeliveryMethod","method","deliveryDateChange","inputedDate","changeComment","inputedComments","makeOrder","dataObj","items","totalAmount","chairItem","colorLegChair","push","firstPillowItem","secondPillowItem","requestMakeOrderApi","TableOrderComponent_TableOrderComponent","placeholder","rows","note_NoteComponent","Order","countCostReducer","data","payload","axios","post","then","res","catch","err","FeedbacksComponent","isFeedbackFormShown","authorName","residenceCity","feedbackText","showFeedBackForm","changeAuthorName","changeResidenceCity","inputComment","text","leaveFeedback","requestLeaveFeedbackApi","window","reload","requestGetFeedbacksApi","feedbacks","feedbacksList","length","Feedbacks","feedbacksReducer","get","MainPageComponent","withRouter","menu_MenuComponent","header_HeaderComponent","Switch","Route","path","component","App","main_MainPageComponent","Boolean","hostname","match","initialState","arguments","undefined","objectSpread","action","message","isFeedbackLeft","console","log","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","BrowserRouter","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0SCgCzBC,SA3BS,WACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,KAC9BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBG,IAAKC,EAAQ,MAChDP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,6EAAkDH,EAAAC,EAAAC,cAAA,WAAlD,qCAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,0MAKAF,EAAAC,EAAAC,cAAA,yEAIAF,EAAAC,EAAAC,cAAA,4CCSOM,SA3BO,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACjB,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAiC,MAAtBO,EAASC,SAAmB,0BAA4B,mBAAoBN,GAAG,KAC5FL,EAAAC,EAAAC,cAAA,8FAEJF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAiC,kBAAtBO,EAASC,SAA+B,0BAA4B,mBAAoBN,GAAG,iBACxGL,EAAAC,EAAAC,cAAA,iFAEJF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAiC,cAAtBO,EAASC,SAA2B,0BAA4B,mBAAoBN,GAAG,aACpGL,EAAAC,EAAAC,cAAA,2GAEJF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAiC,eAAtBO,EAASC,SAA4B,0BAA4B,mBAAoBN,GAAG,cACrGL,EAAAC,EAAAC,cAAA,mDAEJF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAiC,WAAtBO,EAASC,SAAwB,0BAA4B,mBAAoBN,GAAG,UACjGL,EAAAC,EAAAC,cAAA,MAAIU,MAAM,SAAV,8EAEJZ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAiC,cAAtBO,EAASC,SAA2B,0BAA4B,mBAAoBN,GAAG,aACpGL,EAAAC,EAAAC,cAAA,oFCvBlBW,EAAO,wBAEAC,EAAsB,SAACC,GAClC,MAAO,CACLC,KAAM,eACND,UAGSE,EAA2B,SAACF,GACvC,MAAO,CACLC,KAAM,qBACND,UAGSG,EAA4B,SAACH,GACxC,MAAO,CACLC,KAAM,sBACND,UAoCSI,EAAyB,SAAAP,GACpC,MAAO,CACLI,KAAM,wBACNJ,0BC1DSQ,EAAc,CACzB,CACEC,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAGR,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,WAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,YAIGC,EAAe,CAC1B,CACEF,MAAO,UACPC,KAAM,aAER,CACED,MAAO,UACPC,KAAM,WAER,CACED,MAAO,UACPC,KAAM,YAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,SAER,CACED,MAAO,UACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,SAER,CACED,MAAO,UACPC,KAAM,UCpEJE,6MACJC,MAAQ,CACNC,oBAAoB,EACpBC,uBAAuB,EACvBC,WAAY,UACZC,cAAe,aAMjBC,oBAAsB,SAACT,EAAOC,GAC5BS,EAAKC,MAAMC,iBAAiBX,GAC5BS,EAAKG,kBACLH,EAAKI,SAAS,iBAAO,CACnBP,WAAYP,QAGhBe,uBAAyB,SAACf,EAAOC,GAC/BS,EAAKC,MAAMK,oBAAoBf,GAC/BS,EAAKO,qBACLP,EAAKI,SAAS,iBAAO,CACnBN,cAAeR,QAGnBkB,sBAAwB,SAAAC,GACtB,IAAIzB,EAAQyB,EAAMC,OAAO7B,MACzBmB,EAAKC,MAAMlB,oBAAoBC,MAEjC2B,mBAAqB,WACnB,G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","file":"static/js/main.f0e7aa54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.79a5f8cb.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './header.scss';\r\n\r\nconst HeaderComponent = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <Link className=\"header__logo\" to=\"/\">\r\n          <img className=\"header__logo__img\" src={require(\"../../img/logo.jpg\")} />\r\n          <h1 className=\"header__logo__title\">Растущий стул <br />\"Винни\"</h1>\r\n      </Link>\r\n      \r\n      <div className=\"header__info\">\r\n        <p>\r\n          Адрес:\r\n          г.Чебоксары,\r\n          пр.И.Яковлева, д.1, кв.1\r\n        </p>\r\n        <p>\r\n          Телефон:\r\n          8(968)-641-00-88\r\n        </p>\r\n        <p>\r\n          E-mail:\r\n          winnie-stul@mail.ru\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default HeaderComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './menu.scss';\r\n\r\nconst MenuComponent = ({ location }) => {\r\n        return (\r\n            <nav className=\"menu\">\r\n                <ul className=\"menu__list\">\r\n                    <Link className={location.pathname === \"/\" ? \"menu__list__item active\" : \"menu__list__item\"} to=\"/\">\r\n                        <li>Наша продукция</li>\r\n                    </Link>\r\n                    <Link className={location.pathname === \"/photogallery\" ? \"menu__list__item active\" : \"menu__list__item\"} to=\"/photogallery\">\r\n                        <li>Фотогалерея</li>\r\n                    </Link>\r\n                    <Link className={location.pathname === \"/delivery\" ? \"menu__list__item active\" : \"menu__list__item\"} to=\"/delivery\">\r\n                        <li>Доставка и оплата</li>\r\n                    </Link>\r\n                    <Link className={location.pathname === \"/feedbacks\" ? \"menu__list__item active\" : \"menu__list__item\"} to=\"/feedbacks\">\r\n                        <li>Отзывы</li>\r\n                    </Link>\r\n                    <Link className={location.pathname === \"/order\" ? \"menu__list__item active\" : \"menu__list__item\"} to=\"/order\">\r\n                        <li value=\"order\">Сделать заказ</li>\r\n                    </Link>\r\n                    <Link className={location.pathname === \"/contacts\" ? \"menu__list__item active\" : \"menu__list__item\"} to=\"/contacts\">\r\n                        <li>Контакты</li>\r\n                    </Link>\r\n                </ul>\r\n            </nav>\r\n        )\r\n};\r\n\r\nexport default MenuComponent;","import axios from 'axios';\r\n\r\nconst HOST = \"http://localhost:3001\";\r\n\r\nexport const changeCountOfChairs = (count) => {\r\n  return {\r\n    type: 'COUNT_CHAIRS',\r\n    count\r\n  }\r\n};\r\nexport const changeCountOfFirstPillow = (count) => {\r\n  return {\r\n    type: 'COUNT_FIRST_PILLOW',\r\n    count\r\n  }\r\n};\r\nexport const changeCountOfSecondPillow = (count) => {\r\n  return {\r\n    type: 'COUNT_SECOND_PILLOW',\r\n    count\r\n  }\r\n};\r\nexport const checkChair = () => {\r\n  return {\r\n    type: 'CHECK_CHAIR'\r\n  }\r\n};\r\nexport const checkFirstPillow = () => {\r\n  return {\r\n    type: 'CHECK_FIRST_PILLOW'\r\n  }\r\n};\r\nexport const checkSecondPillow = () => {\r\n  return {\r\n    type: 'CHECK_SECOND_PILLOW'\r\n  }\r\n};\r\nexport const countChairCost = cost => {\r\n  return {\r\n    type: 'COUNT_CHAIR_COST',\r\n    cost\r\n  }\r\n};\r\nexport const countFirstPillowCost = cost => {\r\n  return {\r\n    type: 'COUNT_FIRST_PILLOW_COST',\r\n    cost\r\n  }\r\n};\r\nexport const countSecondPillowCost = cost => {\r\n  return {\r\n    type: 'COUNT_SECOND_PILLOW_COST',\r\n    cost\r\n  }\r\n};\r\nexport const chooseCountChairColors = value => {\r\n  return {\r\n    type: 'COUNT_OF_CHAIR_COLORS',\r\n    value\r\n  }\r\n};\r\n\r\nexport const chooseChairColor = (color) => {\r\n  return {\r\n    type: 'CHAIR_COLOR',\r\n    color\r\n  }\r\n};\r\nexport const chooseChairLegColor = (color) => {\r\n  return {\r\n    type: 'CHAIR_LEG_COLOR',\r\n    color\r\n  }\r\n};\r\nexport const chooseFirstPillowColor = (color) => {\r\n  return {\r\n    type: 'FIRST_PILLOW_COLOR',\r\n    color\r\n  }\r\n};\r\nexport const chooseSecondPillowColor = (color) => {\r\n  return {\r\n    type: 'SECOND_PILLOW_COLOR',\r\n    color\r\n  }\r\n};\r\n\r\n//api middlewares\r\nexport const requestMakeOrderApi = data => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'MAKE_ORDER_REQUEST',\r\n      payload: data\r\n    })\r\n\r\n    axios.post(`${HOST}/send`, data)\r\n      .then(res => {\r\n        dispatch({\r\n          type: 'MAKE_ORDER_SUCCESS',\r\n          payload: res.data\r\n        })\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: 'MAKE_ORDER_FAIL',\r\n          payload: err\r\n        })\r\n      })\r\n  }\r\n};\r\n\r\nexport const requestLeaveFeedbackApi = data => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'LEAVE_FEEDBACK_REQUEST',\r\n      payload: data\r\n    })\r\n\r\n    axios.post(`${HOST}/leave-feedback`, data)\r\n      .then(res => {\r\n        dispatch({\r\n          type: 'LEAVE_FEEDBACK_SUCCESS',\r\n          payload: res.data\r\n        })\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: 'LEAVE_FEEDBACK_FAIL',\r\n          payload: err\r\n        })\r\n      })\r\n  }\r\n};\r\n\r\nexport const requestGetFeedbacksApi = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'GET_FEEDBACK_LIST_REQUEST'\r\n    })\r\n\r\n    axios.get(`${HOST}/get-feedbacks`)\r\n      .then(res => {\r\n        dispatch({\r\n          type: 'GET_FEEDBACK_LIST_SUCCESS',\r\n          payload: res.data\r\n        })\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: 'GET_FEEDBACK_LIST_FAIL',\r\n          payload: err\r\n        })\r\n      })\r\n  }\r\n};\r\n\r\n\r\n","export const chairColors = [\r\n  {\r\n    color: '#e7d8c1',\r\n    name: 'Y401'\r\n  },\r\n  {\r\n    color: '#e2a7bb',\r\n    name: 'X329'\r\n  },\r\n\r\n  {\r\n    color: '#af2c3c',\r\n    name: 'M323'\r\n  },\r\n  {\r\n    color: '#579236',\r\n    name: 'L381'\r\n  },\r\n  {\r\n    color: '#876fab',\r\n    name: 'L343'\r\n  },\r\n  {\r\n    color: '#007fb6',\r\n    name: 'K360'\r\n  },\r\n  {\r\n    color: '#61493f',\r\n    name: 'RAL8011'\r\n  },\r\n  {\r\n    color: '#434544',\r\n    name: 'Y499'\r\n  },\r\n  {\r\n    color: '#67c1e4',\r\n    name: 'J360'\r\n  },\r\n  {\r\n    color: '#a6a7a1',\r\n    name: 'M497'\r\n  },\r\n  {\r\n    color: '#99dbbf',\r\n    name: 'J372'\r\n  },\r\n  {\r\n    color: '#e7cdaa',\r\n    name: 'X399'\r\n  },\r\n  {\r\n    color: '#e8782c',\r\n    name: 'N312'\r\n  },\r\n  {\r\n    color: '#fbc500',\r\n    name: 'M300'\r\n  },\r\n  {\r\n    color: '#eff0ea',\r\n    name: 'RAL9016'\r\n  }\r\n];\r\n\r\nexport const pillowColors = [\r\n  {\r\n    color: '#ae7959',\r\n    name: 'terracota'\r\n  },\r\n  {\r\n    color: '#595957',\r\n    name: 'dk grey'\r\n  },\r\n  {\r\n    color: '#4d362e',\r\n    name: 'dk brown'\r\n  },\r\n  {\r\n    color: '#d5ca61',\r\n    name: 'lime'\r\n  },\r\n  {\r\n    color: '#aebcbf',\r\n    name: 'steel'\r\n  },\r\n  {\r\n    color: '#ebced0',\r\n    name: 'rose'\r\n  },\r\n  {\r\n    color: '#a9aaa4',\r\n    name: 'beige'\r\n  },\r\n  {\r\n    color: '#3d6388',\r\n    name: 'denim'\r\n  }\r\n];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeCountOfChairs, checkChair, chooseChairColor, chooseChairLegColor, countChairCost, chooseCountChairColors } from '../../../../js/actions';\r\nimport { chairColors } from '../../../../data/colors';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    countOfChairs: state.countOfGoodsReducer.countOfChairs,\r\n    isChairChecked: state.checkGoodsReducer.isChairChecked,\r\n    chairColor: state.colorReducer.chairColor,\r\n    chairLegColor: state.colorReducer.chairLegColor,\r\n    countOfChairs: state.countOfGoodsReducer.countOfChairs,\r\n    countColorsOfChair: state.colorReducer.countColorsOfChair\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeCountOfChairs: (count) => dispatch(changeCountOfChairs(count)),\r\n    checkChair: () => dispatch(checkChair()),\r\n    chooseChairColor: (color) => dispatch(chooseChairColor(color)),\r\n    chooseChairLegColor: (color) => dispatch(chooseChairLegColor(color)),\r\n    countChairCost: (cost) => dispatch(countChairCost(cost)),\r\n    chooseCountChairColors: (value) => dispatch(chooseCountChairColors(value))\r\n  }\r\n};\r\n\r\nclass ChairComponent extends Component {\r\n  state = {\r\n    isChairColorsShown: false,\r\n    isChairLegColorsShown: false,\r\n    chairColor: \"#007fb6\",\r\n    chairLegColor: \"#007fb6\"\r\n  };\r\n  componentDidUpdate () {\r\n    this.toCountCostOfChair();\r\n  }\r\n\r\n  chooseColorForChair = (color, name) => {\r\n    this.props.chooseChairColor(name);\r\n    this.showChairColors();\r\n    this.setState(() => ({\r\n      chairColor: color\r\n    }))\r\n  };\r\n  chooseColorForChairLeg = (color, name) => {\r\n    this.props.chooseChairLegColor(name);\r\n    this.showChairLegColors();\r\n    this.setState(() => ({\r\n      chairLegColor: color\r\n    }))\r\n  };\r\n  toChangeCountOfChairs = event => {\r\n    let count = event.target.value;\r\n    this.props.changeCountOfChairs(count);\r\n  };\r\n  toCountCostOfChair = () => {\r\n    if (this.props.isChairChecked) {\r\n      let cost = this.props.chairPrice * Number(this.props.countOfChairs);\r\n      this.props.countChairCost(cost);\r\n    } else {\r\n      let cost = 0;\r\n      this.props.countChairCost(cost);\r\n    }\r\n  };\r\n\r\n  toCheckChair = () => {\r\n    this.props.checkChair();\r\n  };\r\n  showChairColors = () => {\r\n    this.setState((prevState) => ({\r\n      isChairColorsShown: !prevState.isChairColorsShown\r\n    }))\r\n  };\r\n  showChairLegColors = () => {\r\n    this.setState((prevState) => ({\r\n      isChairLegColorsShown: !prevState.isChairLegColorsShown\r\n    }))\r\n  }\r\n  handleChangeColorsOfChair = event => {\r\n    let val = event.target.value;\r\n    this.props.chooseCountChairColors(val);\r\n  }\r\n\r\n  render () {\r\n    const blockOfChairColors = chairColors.map((item, index) => {\r\n      return <div key={index} className=\"order__color-btn\" style={{ backgroundColor: item.color }} onClick={() => this.chooseColorForChair(item.color, item.name)}></div>\r\n    });\r\n    const blockOfChairLegsColors = chairColors.map((item, index) => {\r\n      return <div key={index} className=\"order__color-btn\" style={{ backgroundColor: item.color }} onClick={() => this.chooseColorForChairLeg(item.color, item.name)}></div>\r\n    });\r\n\r\n    let { countOfChairs, chairPrice, isChairChecked, chairLegColor, chairColor } = this.props;\r\n    return (\r\n      <tr>\r\n        <td className=\"order__block\">Стул</td>\r\n        <td className=\"order__block\">\r\n\r\n          <select className=\"order__block__select\" onChange={this.handleChangeColorsOfChair}>\r\n            <option value=\"monochrome\">Один цвет</option>\r\n            <option value=\"bicolor\">Двухцветный</option>\r\n          </select>\r\n\r\n          {this.props.countColorsOfChair == \"monochrome\" ?\r\n            <div className=\"order__block__colors\">\r\n              <button className=\"order__block__colors__show-colors\" onClick={this.showChairColors} style={{ backgroundColor: this.state.chairColor }}></button>\r\n              {this.state.isChairColorsShown &&\r\n                <div className=\"order__block__colors__color\">\r\n                  {blockOfChairColors}\r\n                </div>}\r\n            </div>\r\n            : <div>\r\n              <div className=\"order__block__colors\">\r\n                <p>Цвет стула:</p>\r\n                <button className=\"order__block__colors__show-colors\" onClick={this.showChairColors} style={{ backgroundColor: this.state.chairColor }}></button>\r\n                {this.state.isChairColorsShown &&\r\n                  <div className=\"order__block__colors__color\">\r\n                    {blockOfChairColors}\r\n                  </div>}\r\n              </div>\r\n              <div className=\"order__block__colors\">\r\n                <p>Цвет ножек:</p>\r\n                <button className=\"order__block__colors__show-colors\" onClick={this.showChairLegColors} style={{ backgroundColor: this.state.chairLegColor }}></button>\r\n                {this.state.isChairLegColorsShown &&\r\n                  <div className=\"order__block__colors__color\">\r\n                    {blockOfChairLegsColors}\r\n                  </div>}\r\n              </div>\r\n            </div>\r\n          }\r\n\r\n        </td>\r\n        <td className=\"order__block\">\r\n          <input className=\"order__block__count\" value={countOfChairs} onChange={this.toChangeCountOfChairs} />\r\n        </td>\r\n        <td className=\"order__block\">{`${chairPrice} руб.`}</td>\r\n        <td className=\"order__block\">\r\n          <input type=\"checkbox\" checked={isChairChecked} onChange={this.toCheckChair} />\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n};\r\n\r\nconst Chair = connect(mapStateToProps, mapDispatchToProps)(ChairComponent);\r\nexport default Chair;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { chooseFirstPillowColor, changeCountOfFirstPillow, checkFirstPillow, countFirstPillowCost } from '../../../../js/actions';\r\nimport { pillowColors } from '../../../../data/colors';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    countOfFirstPillow: state.countOfGoodsReducer.countOfFirstPillow,\r\n    isFirstPillowChecked: state.checkGoodsReducer.isFirstPillowChecked,\r\n    countOfFirstPillow: state.countOfGoodsReducer.countOfFirstPillow\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    chooseFirstPillowColor: (color) => dispatch(chooseFirstPillowColor(color)),\r\n    changeCountOfFirstPillow: (count) => dispatch(changeCountOfFirstPillow(count)),\r\n    checkFirstPillow: () => dispatch(checkFirstPillow()),\r\n    countFirstPillowCost: (cost) => dispatch(countFirstPillowCost(cost))\r\n  }\r\n};\r\n\r\nclass FirstPillowComponent extends Component {\r\n  state = {\r\n    isColorsShown: false,\r\n    firstPillowColor: '#ebced0'\r\n  };\r\n  componentDidUpdate () {\r\n    this.toCountCostOfFirstPillow();\r\n  }\r\n\r\n  chooseColorForFirstPillow = (color, name) => {\r\n    this.props.chooseFirstPillowColor(name);\r\n    this.showColorsOfFirstPillow();\r\n    this.setState(() => ({\r\n      firstPillowColor: color\r\n    }))\r\n  };\r\n  showColorsOfFirstPillow = () => {\r\n    this.setState((prevState) => ({\r\n      isColorsShown: !prevState.isColorsShown\r\n    }))\r\n  };\r\n  toChangeCountOfFirstPillow = (e) => {\r\n    let count = e.target.value;\r\n    this.props.changeCountOfFirstPillow(count);\r\n  };\r\n  toCheckFirstPillow = () => {\r\n    this.props.checkFirstPillow();\r\n  };\r\n  toCountCostOfFirstPillow = () => {\r\n    if (this.props.isFirstPillowChecked) {\r\n      let cost = this.props.firstPillowPrice * Number(this.props.countOfFirstPillow);\r\n      this.props.countFirstPillowCost(cost);\r\n    } else {\r\n      let cost = 0;\r\n      this.props.countFirstPillowCost(cost);\r\n    }\r\n  };\r\n\r\n  render () {\r\n    const blockOfColors = pillowColors.map((item, index) => {\r\n      return <div key={index} className=\"order__color-btn\" style={{ backgroundColor: item.color }} onClick={() => this.chooseColorForFirstPillow(item.color, item.name)}></div>\r\n    });\r\n\r\n    const { countOfFirstPillow, firstPillowPrice, isFirstPillowChecked } = this.props;\r\n\r\n    return (\r\n      <tr>\r\n        <td className=\"order__block\">Подушка 1</td>\r\n        <td className=\"order__block\">\r\n          <div className=\"order__block__colors\">\r\n            <button className=\"order__block__colors__show-colors\" onClick={this.showColorsOfFirstPillow} style={{ backgroundColor: this.state.firstPillowColor }}></button>\r\n            {this.state.isColorsShown &&\r\n              <div className=\"order__block__colors__color\">\r\n                {blockOfColors}\r\n              </div>}\r\n          </div>\r\n\r\n        </td>\r\n        <td className=\"order__block\">\r\n          <input className=\"order__block__count\" value={countOfFirstPillow} onChange={this.toChangeCountOfFirstPillow}></input>\r\n        </td>\r\n        <td className=\"order__block\">{`${firstPillowPrice} руб.`}</td>\r\n        <td className=\"order__block\">\r\n          <input type=\"checkbox\" checked={isFirstPillowChecked} onChange={this.toCheckFirstPillow} />\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n};\r\n\r\nconst FirstPillow = connect(mapStateToProps, mapDispatchToProps)(FirstPillowComponent);\r\nexport default FirstPillow;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeCountOfSecondPillow, checkSecondPillow, chooseSecondPillowColor, countSecondPillowCost } from '../../../../js/actions';\r\nimport { pillowColors } from '../../../../data/colors';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    countOfSecondPillow: state.countOfGoodsReducer.countOfSecondPillow,\r\n    isSecondPillowChecked: state.checkGoodsReducer.isSecondPillowChecked,\r\n    countOfSecondPillow: state.countOfGoodsReducer.countOfSecondPillow\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeCountOfSecondPillow: (count) => dispatch(changeCountOfSecondPillow(count)),\r\n    checkSecondPillow: () => dispatch(checkSecondPillow()),\r\n    chooseSecondPillowColor: (color) => dispatch(chooseSecondPillowColor(color)),\r\n    countSecondPillowCost: (cost) => dispatch(countSecondPillowCost(cost))\r\n  }\r\n};\r\n\r\nclass SecondPillowComponent extends Component {\r\n  state = {\r\n    isColorsShown: false,\r\n    secondPillowColor: '#ebced0'\r\n  };\r\n  componentDidUpdate () {\r\n    this.toCountCostOfSecondPillow();\r\n  }\r\n\r\n  chooseColorForSecondPillow = (color, name) => {\r\n    this.props.chooseSecondPillowColor(name);\r\n    this.showColorsOfSecondPillow();\r\n    this.setState(() => ({\r\n      secondPillowColor: color\r\n    }))\r\n  };\r\n  showColorsOfSecondPillow = () => {\r\n    this.setState((prevState) => ({\r\n      isColorsShown: !prevState.isColorsShown\r\n    }))\r\n  };\r\n  toChangeCountOfSecondPillow = e => {\r\n    let count = e.target.value;\r\n    this.props.changeCountOfSecondPillow(count);\r\n  };\r\n  toCheckSecondPillow = () => {\r\n    this.props.checkSecondPillow();\r\n  };\r\n  toCountCostOfSecondPillow = () => {\r\n    if (this.props.isSecondPillowChecked) {\r\n      let cost = this.props.secondPillowPrice * Number(this.props.countOfSecondPillow);\r\n      this.props.countSecondPillowCost(cost);\r\n    } else {\r\n      let cost = 0;\r\n      this.props.countSecondPillowCost(cost);\r\n    }\r\n  };\r\n\r\n\r\n  render () {\r\n    const blockOfColors = pillowColors.map((item, index) => {\r\n      return <div key={index} className=\"order__color-btn\" style={{ backgroundColor: item.color }} onClick={() => this.chooseColorForSecondPillow(item.color, item.name)}></div>\r\n    });\r\n\r\n    const { countOfSecondPillow, secondPillowPrice, isSecondPillowChecked, secondPillowColor } = this.props;\r\n\r\n    return (\r\n      <tr>\r\n        <td className=\"order__block\">Подушка 2</td>\r\n        <td className=\"order__block\">\r\n          <div className=\"order__block__colors\">\r\n            <button className=\"order__block__colors__show-colors\" onClick={this.showColorsOfSecondPillow} style={{ backgroundColor: this.state.secondPillowColor }}></button>\r\n            {this.state.isColorsShown &&\r\n              <div className=\"order__block__colors__color\">\r\n                {blockOfColors}\r\n              </div>}\r\n          </div>\r\n\r\n        </td>\r\n        <td className=\"order__block\">\r\n          <input className=\"order__block__count\" value={countOfSecondPillow} onChange={this.toChangeCountOfSecondPillow}></input>\r\n        </td>\r\n        <td className=\"order__block\">{`${secondPillowPrice} руб.`}</td>\r\n        <td className=\"order__block\">\r\n          <input type=\"checkbox\" checked={isSecondPillowChecked} onChange={() => this.toCheckSecondPillow(secondPillowPrice)} />\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n};\r\n\r\nconst SecondPillow = connect(mapStateToProps, mapDispatchToProps)(SecondPillowComponent);\r\nexport default SecondPillow;","import React, { Component } from 'react';\r\n\r\nimport Chair from '../chair/ChairComponent';\r\nimport FirstPillow from '../firstPillow/FirstPillowComponent';\r\nimport SecondPillow from '../secondPillow/SecondPillowComponent';\r\n\r\nexport default class TableOrderComponent extends Component {\r\n  state = {\r\n    chairPrice: 6000,\r\n    firstPillowPrice: 1000,\r\n    secondPillowPrice: 500\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <table cols=\"5\">\r\n        <tbody>\r\n          <tr>\r\n            <th className=\"order__header\"></th>\r\n            <th className=\"order__header\">Цвет</th>\r\n            <th className=\"order__header\">Количество</th>\r\n            <th className=\"order__header\">Цена</th>\r\n            <th className=\"order__header\">Выбрать</th>\r\n          </tr>\r\n\r\n          <Chair toCountCostOfChair={this.toCountCostOfChair} chairPrice={this.state.chairPrice} />\r\n          <FirstPillow toCountCostOfChair={this.toCountCostOfChair} firstPillowPrice={this.state.firstPillowPrice} />\r\n          <SecondPillow toCountCostOfChair={this.toCountCostOfChair} secondPillowPrice={this.state.secondPillowPrice} />\r\n\r\n          <tr>\r\n            <td className=\"order__footer order__footer_text\" colSpan=\"3\">Итого:</td>\r\n            <td className=\"order__footer order__footer_cost\">{`${this.props.getTotalAmount()} руб.`}</td>\r\n            <td className=\"order__footer\"></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './note.scss';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orderStatus: state.makeOrderReducer.orderStatus\r\n  }\r\n};\r\n\r\n\r\n\r\nconst NoteComponent = ({ showNote, orderStatus }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"background\" onClick={showNote}></div>\r\n      {orderStatus == \"success\" &&\r\n        <div className=\"note\">\r\n          <button className=\"note__close-btn\" onClick={showNote}>X</button>\r\n\r\n          <p className=\"note__text\">\r\n            Спасибо за заказ!\r\n            <br />Мы перезвоним Вам в ближайшее время.\r\n          </p>\r\n        </div>}\r\n\r\n      {orderStatus.toString().search(/error/i) !== -1 &&\r\n        <div className=\"note\">\r\n          <button className=\"note__close-btn\" onClick={showNote}>X</button>\r\n\r\n          <p className=\"note__text\">\r\n            Что-то пошло не так :(\r\n            <br />Приносим свои извинения.\r\n          </p>\r\n        </div>}\r\n\r\n\r\n    </div >\r\n  )\r\n};\r\n\r\nconst Note = connect(mapStateToProps)(NoteComponent);\r\n\r\nexport default Note;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  requestMakeOrderApi,\r\n  changeCountOfChairs,\r\n  changeCountOfFirstPillow,\r\n  changeCountOfSecondPillow,\r\n  checkChair,\r\n  checkFirstPillow,\r\n  checkSecondPillow,\r\n  chooseCountChairColors\r\n} from '../../js/actions';\r\n\r\nimport './order.scss';\r\n\r\nimport TableOrder from './goodsInfo/table/TableOrderComponent';\r\nimport Note from './note/NoteComponent';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    costOfChair: state.countCostReducer.costOfChair,\r\n    costOfFirstPillow: state.countCostReducer.costOfFirstPillow,\r\n    costOfSecondPillow: state.countCostReducer.costOfSecondPillow,\r\n    isChairChecked: state.checkGoodsReducer.isChairChecked,\r\n    isFirstPillowChecked: state.checkGoodsReducer.isFirstPillowChecked,\r\n    isSecondPillowChecked: state.checkGoodsReducer.isSecondPillowChecked,\r\n    chairColor: state.colorReducer.chairColor,\r\n    chairLegColor: state.colorReducer.chairLegColor,\r\n    firstPillowColor: state.colorReducer.firstPillowColor,\r\n    secondPillowColor: state.colorReducer.secondPillowColor,\r\n    countColorsOfChair: state.colorReducer.countColorsOfChair,\r\n    countOfChairs: state.countOfGoodsReducer.countOfChairs,\r\n    countOfFirstPillow: state.countOfGoodsReducer.countOfFirstPillow,\r\n    countOfSecondPillow: state.countOfGoodsReducer.countOfSecondPillow\r\n  }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    requestMakeOrderApi: (data) => dispatch(requestMakeOrderApi(data)),\r\n    changeCountOfChairs: (count) => dispatch(changeCountOfChairs(count)),\r\n    changeCountOfFirstPillow: (count) => dispatch(changeCountOfFirstPillow(count)),\r\n    changeCountOfSecondPillow: (count) => dispatch(changeCountOfSecondPillow(count)),\r\n    checkChair: () => dispatch(checkChair()),\r\n    checkFirstPillow: () => dispatch(checkFirstPillow()),\r\n    checkSecondPillow: () => dispatch(checkSecondPillow()),\r\n    chooseCountChairColors: (value) => dispatch(chooseCountChairColors(value))\r\n  }\r\n};\r\n\r\nclass OrderComponent extends Component {\r\n  state = {\r\n    firstName: '',\r\n    secondName: '',\r\n    phoneNumber: '',\r\n    mail: '',\r\n    city: '',\r\n    street: '',\r\n    houseNumber: '',\r\n    flatNumber: '',\r\n    deliveryDate: '',\r\n    deliveryMethod: \"Курьер\",\r\n    comments: '',\r\n    isOrderSent: false\r\n  };\r\n  clearForm = () => {\r\n    this.props.changeCountOfChairs(1);\r\n    this.props.changeCountOfFirstPillow(1);\r\n    this.props.changeCountOfSecondPillow(1);\r\n    this.props.checkChair();\r\n    this.props.checkFirstPillow();\r\n    this.props.checkSecondPillow();\r\n\r\n    this.setState(() => ({\r\n      firstName: '',\r\n      secondName: '',\r\n      phoneNumber: '',\r\n      mail: '',\r\n      city: '',\r\n      street: '',\r\n      houseNumber: '',\r\n      flatNumber: '',\r\n      deliveryDate: '',\r\n      deliveryMethod: \"Курьер\",\r\n      comments: ''\r\n    }));\r\n  }\r\n  getTotalAmount = () => {\r\n    let totalAmount = this.props.costOfChair + this.props.costOfFirstPillow + this.props.costOfSecondPillow;\r\n    return totalAmount;\r\n  }\r\n  secondNameChange = e => {\r\n    let inputedSecondName = e.target.value;\r\n    this.setState(() => ({\r\n      secondName: inputedSecondName\r\n    }));\r\n  };\r\n  firstNameChange = e => {\r\n    let inputedFirstName = e.target.value;\r\n    this.setState(() => ({\r\n      firstName: inputedFirstName\r\n    }));\r\n  };\r\n  phoneNumberChange = e => {\r\n    let inputedPhoneNumber = e.target.value;\r\n    this.setState(() => ({\r\n      phoneNumber: inputedPhoneNumber\r\n    }));\r\n  };\r\n  mailChange = e => {\r\n    let inputedMail = e.target.value;\r\n    this.setState(() => ({\r\n      mail: inputedMail\r\n    }));\r\n  };\r\n  cityChange = e => {\r\n    let inputedCity = e.target.value;\r\n    this.setState(() => ({\r\n      city: inputedCity\r\n    }));\r\n  };\r\n  houseNumberChange = e => {\r\n    let inputedHouseNumber = e.target.value;\r\n    this.setState(() => ({\r\n      houseNumber: inputedHouseNumber\r\n    }));\r\n  };\r\n  flatNumberChange = e => {\r\n    let inputedFlatNumber = e.target.value;\r\n    this.setState(() => ({\r\n      flatNumber: inputedFlatNumber\r\n    }));\r\n  };\r\n  streetChange = e => {\r\n    let inputedStreet = e.target.value;\r\n    this.setState(() => ({\r\n      street: inputedStreet\r\n    }));\r\n  };\r\n  chooseDeliveryMethod = e => {\r\n    let method = e.target.value;\r\n    this.setState(() => ({\r\n      deliveryMethod: method\r\n    }))\r\n  };\r\n  deliveryDateChange = e => {\r\n    let inputedDate = e.target.value;\r\n    this.setState(() => ({\r\n      deliveryDate: inputedDate\r\n    }));\r\n  };\r\n  changeComment = e => {\r\n    let inputedComments = e.target.value;\r\n    this.setState(() => ({\r\n      comments: inputedComments\r\n    }))\r\n  };\r\n\r\n  showNote = () => {\r\n    this.setState((prevState) => ({\r\n      isOrderSent: !prevState.isOrderSent\r\n    }));\r\n  };\r\n  makeOrder = () => {\r\n    let dataObj = {\r\n      items: [],\r\n      totalAmount: this.getTotalAmount(),\r\n      firstName: this.state.firstName,\r\n      secondName: this.state.secondName,\r\n      phoneNumber: this.state.phoneNumber,\r\n      mail: this.state.mail,\r\n      city: this.state.city,\r\n      street: this.state.street,\r\n      houseNumber: this.state.houseNumber,\r\n      flatNumber: this.state.flatNumber,\r\n      deliveryDate: this.state.deliveryDate,\r\n      deliveryMethod: this.state.deliveryMethod,\r\n      comments: this.state.comments\r\n    };\r\n\r\n    if (this.props.isChairChecked) {\r\n      let chairItem = {\r\n        item: \"Стул\",\r\n        color: this.props.chairColor,\r\n        count: this.props.countOfChairs\r\n      };\r\n\r\n      if (this.props.countColorsOfChair == \"bicolor\") {\r\n        chairItem.colorLegChair = this.props.chairLegColor;\r\n        dataObj.items.push(chairItem);\r\n      } else {\r\n        dataObj.items.push(chairItem);\r\n      }\r\n\r\n    }\r\n    if (this.props.isFirstPillowChecked) {\r\n      let firstPillowItem = {\r\n        item: \"Подушка 1\",\r\n        color: this.props.firstPillowColor,\r\n        count: this.props.countOfFirstPillow\r\n      };\r\n      dataObj.items.push(firstPillowItem);\r\n    }\r\n    if (this.props.isSecondPillowChecked) {\r\n      let secondPillowItem = {\r\n        item: \"Подушка 2\",\r\n        color: this.props.secondPillowColor,\r\n        count: this.props.countOfSecondPillow\r\n      };\r\n      dataObj.items.push(secondPillowItem);\r\n    }\r\n\r\n    this.props.requestMakeOrderApi(dataObj);\r\n    this.showNote();\r\n    this.clearForm();\r\n  }\r\n  render () {\r\n    return (\r\n      <div className=\"order\" >\r\n        <TableOrder getTotalAmount={this.getTotalAmount} />\r\n\r\n        <div className=\"order__info\">\r\n          <input className=\"order__info__input\" value={this.state.secondName} placeholder=\"Фамилия\" onChange={this.secondNameChange} />\r\n          <input className=\"order__info__input\" value={this.state.firstName} placeholder=\"Имя\" onChange={this.firstNameChange} />\r\n          <input className=\"order__info__input\" value={this.state.phoneNumber} placeholder=\"Номер телефона\" onChange={this.phoneNumberChange} />\r\n          <input className=\"order__info__input\" value={this.state.mail} placeholder=\"E-mail\" onChange={this.mailChange} />\r\n\r\n          <p>Адрес доставки:</p>\r\n          <input className=\"order__info__input\" value={this.state.city} placeholder=\"Город\" onChange={this.cityChange} />\r\n          <input className=\"order__info__input\" value={this.state.street} placeholder=\"Улица\" onChange={this.streetChange} />\r\n          <input className=\"order__info__input\" value={this.state.houseNumber} placeholder=\"Дом\" onChange={this.houseNumberChange} />\r\n          <input className=\"order__info__input\" value={this.state.flatNumber} placeholder=\"Квартира\" onChange={this.flatNumberChange} />\r\n\r\n          <input className=\"order__info__input\" value={this.state.deliveryDate} placeholder=\"Дата доставки\" onChange={this.deliveryDateChange} />\r\n        </div>\r\n\r\n        <div className=\"order__delivery\">\r\n          <p>Способ доставки:</p>\r\n          <div>\r\n            <label>\r\n              <input type=\"radio\" value=\"Курьер\" checked={this.state.deliveryMethod === \"Курьер\"} onChange={this.chooseDeliveryMethod} />\r\n              Курьер\r\n        </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <input type=\"radio\" value=\"Почта России\" checked={this.state.deliveryMethod === \"Почта России\"} onChange={this.chooseDeliveryMethod} />\r\n              Почта России\r\n        </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <input type=\"radio\" value=\"Доставка по России и СНГ транспортными компаниями\" checked={this.state.deliveryMethod === \"Доставка по России и СНГ транспортными компаниями\"}\r\n                onChange={this.chooseDeliveryMethod} />\r\n              Доставка по России и СНГ транспортными компаниями\r\n        </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"order__comments\">\r\n          <label>\r\n            <p>Ваши комментарии к заказу:</p>\r\n            <textarea rows=\"10\" cols=\"60\" value={this.state.comments} onChange={this.changeComment} />\r\n          </label>\r\n        </div>\r\n\r\n        {this.state.isOrderSent && <Note showNote={this.showNote} />}\r\n\r\n        <button className=\"order__order-btn\" type=\"submit\" onClick={this.makeOrder}>Заказать</button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Order = connect(mapStateToProps, mapDispatchToProps)(OrderComponent);\r\nexport default Order;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { requestLeaveFeedbackApi, requestGetFeedbacksApi } from '../../js/actions';\r\n\r\nimport './feedback.scss';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        feedbacksList: state.feedbacksReducer.feedbacksList\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        requestLeaveFeedbackApi: data => dispatch(requestLeaveFeedbackApi(data)),\r\n        requestGetFeedbacksApi: () => dispatch(requestGetFeedbacksApi())\r\n    }\r\n};\r\n\r\nclass FeedbacksComponent extends Component {\r\n    state = {\r\n        isFeedbackFormShown: false,\r\n        authorName: '',\r\n        residenceCity: '',\r\n        feedbackText: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.requestGetFeedbacksApi();\r\n    };\r\n\r\n    showFeedBackForm = () => {\r\n        this.setState((prevState) => ({\r\n            isFeedbackFormShown: !prevState.isFeedbackFormShown\r\n        }))\r\n    };\r\n\r\n    changeAuthorName = event => {\r\n        let name = event.target.value;\r\n        this.setState(() => ({\r\n            authorName: name\r\n        }));\r\n    };\r\n\r\n    changeResidenceCity = event => {\r\n        let city = event.target.value;\r\n        this.setState(() => ({\r\n            residenceCity: city\r\n        }));\r\n    };\r\n\r\n    inputComment = event => {\r\n        let text = event.target.value;\r\n        this.setState(() => ({\r\n            feedbackText: text\r\n        }))\r\n    };\r\n\r\n    leaveFeedback = () => {\r\n        let dataObj = {\r\n            authorName: this.state.authorName,\r\n            residenceCity: this.state.residenceCity,\r\n            feedbackText: this.state.feedbackText\r\n        };\r\n\r\n        this.props.requestLeaveFeedbackApi(dataObj);\r\n        window.location.reload();\r\n    };\r\n\r\n    render() {\r\n        const feedbacks = this.props.feedbacksList.map((item, index) => {\r\n            return (\r\n                <div className=\"feedback__item\" key={index}>  \r\n                    <div className=\"feedback__item__text\">{item.feedbackText}</div>               \r\n                    <div className=\"feedback__item__author\">{item.authorName}, {item.residenceCity}</div>\r\n                </div>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"feedback\">\r\n                {this.props.feedbacksList.length === 0 ? \r\n                    <div className=\"feedback__empty\">Отзывов пока нет</div>\r\n                    : <div>\r\n                        {feedbacks}\r\n                    </div>\r\n                }\r\n\r\n\r\n                {!this.state.isFeedbackFormShown &&\r\n                    <button className=\"feedback__btn\" onClick={this.showFeedBackForm}>Оставить отзыв</button>\r\n                }\r\n                {this.state.isFeedbackFormShown && \r\n                    <div className=\"feedback__form\">\r\n                        <input  className=\"feedback__form__name\" value={this.state.authorName} onChange={this.changeAuthorName} placeholder=\"Ваше имя\"/>\r\n                        <input className=\"feedback__form__city\" value={this.state.residenceCity} onChange={this.changeResidenceCity} placeholder=\"Ваш город\" />\r\n\r\n                        <label>\r\n                            <p>Введите текст отзыва:</p>\r\n                            <textarea className=\"feedback__form__text\" rows=\"10\" cols=\"68\" value={this.state.comments} onChange={this.inputComment} />\r\n                        </label>\r\n                        <button className=\"feedback__form__btn\" onClick={this.leaveFeedback}>Отправить отзыв</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst Feedbacks = connect(mapStateToProps, mapDispatchToProps)(FeedbacksComponent);\r\nexport default Feedbacks;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport HeaderComponent from '../header/HeaderComponent';\r\nimport Menu from '../menu/MenuComponent';\r\nimport Order from '../order/OrderComponent';\r\nimport Feedbacks from '../feedbacks/FeedbacksComponent';\r\n\r\nclass MainPageComponent extends Component {\r\n  render () {\r\n    const MenuComponent = withRouter(props => <Menu {...props} />);\r\n    return (\r\n      <div>\r\n        <HeaderComponent />\r\n        <MenuComponent />\r\n        <Switch>\r\n          <Route path=\"/order\" component={Order} />\r\n          <Route path=\"/feedbacks\" component={Feedbacks} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default MainPageComponent;","import React, { Component } from 'react';\r\n\r\nimport MainPage from './components/main/MainPageComponent';\r\n\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <MainPage />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst initialState = {\r\n  isChairChecked: false,\r\n  isFirstPillowChecked: false,\r\n  isSecondPillowChecked: false\r\n};\r\n\r\nfunction checkGoodsReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'CHECK_CHAIR':\r\n      return {\r\n        ...state,\r\n        isChairChecked: !state.isChairChecked\r\n      };\r\n\r\n    case 'CHECK_FIRST_PILLOW':\r\n      return { ...state, isFirstPillowChecked: !state.isFirstPillowChecked };\r\n\r\n    case 'CHECK_SECOND_PILLOW':\r\n      return { ...state, isSecondPillowChecked: !state.isSecondPillowChecked };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default checkGoodsReducer;","import React from 'react';\r\n\r\nconst initialState = {\r\n  countOfChairs: 1,\r\n  countOfFirstPillow: 1,\r\n  countOfSecondPillow: 1,\r\n};\r\n\r\nfunction countOfGoodsReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'COUNT_CHAIRS':\r\n      return { ...state, countOfChairs: action.count };\r\n\r\n    case 'COUNT_FIRST_PILLOW':\r\n      return { ...state, countOfFirstPillow: action.count };\r\n\r\n    case 'COUNT_SECOND_PILLOW':\r\n      return { ...state, countOfSecondPillow: action.count };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default countOfGoodsReducer;","import React from 'react';\r\n\r\nconst initialState = {\r\n  chairColor: '#007fb6',\r\n  chairLegColor: '#007fb6',\r\n  firstPillowColor: '#ebced0',\r\n  secondPillowColor: '#ebced0',\r\n  countColorsOfChair: \"monochrome\"\r\n};\r\n\r\nfunction colorReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'CHAIR_COLOR':\r\n      return { ...state, chairColor: action.color };\r\n\r\n    case 'CHAIR_LEG_COLOR':\r\n      return { ...state, chairLegColor: action.color };\r\n\r\n    case 'FIRST_PILLOW_COLOR':\r\n      return { ...state, firstPillowColor: action.color };\r\n\r\n    case 'SECOND_PILLOW_COLOR':\r\n      return { ...state, secondPillowColor: action.color };\r\n\r\n    case 'COUNT_OF_CHAIR_COLORS':\r\n      return { ...state, countColorsOfChair: action.value }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default colorReducer;","import React from 'react';\r\n\r\nconst initialState = {\r\n  costOfChair: 0,\r\n  costOfFirstPillow: 0,\r\n  costOfSecondPillow: 0\r\n};\r\n\r\nfunction countCostReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'COUNT_CHAIR_COST':\r\n      return { ...state, costOfChair: action.cost };\r\n\r\n    case 'COUNT_FIRST_PILLOW_COST':\r\n      return { ...state, costOfFirstPillow: action.cost };\r\n\r\n    case 'COUNT_SECOND_PILLOW_COST':\r\n      return { ...state, costOfSecondPillow: action.cost };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default countCostReducer;","import React from 'react';\r\n\r\nconst initialState = {\r\n  orderStatus: false\r\n};\r\n\r\nfunction makeOrderReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'MAKE_ORDER_REQUEST':\r\n      return { ...state, orderStatus: action.payload };\r\n\r\n    case 'MAKE_ORDER_SUCCESS':\r\n      return { ...state, orderStatus: action.payload.message };\r\n\r\n    case 'MAKE_ORDER_FAIL':\r\n      return { ...state, orderStatus: action.payload.message };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default makeOrderReducer;","import React from 'react';\r\n\r\nconst initialState = {\r\n    isFeedbackLeft: false,\r\n    feedbacksList: []\r\n};\r\n\r\nfunction feedbacksReducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'LEAVE_FEEDBACK_SUCCESS': \r\n            return {...state, isFeedbackLeft: action.payload.message};\r\n\r\n        case 'LEAVE_FEEDBACK_FAIL': \r\n            return {...state, isFeedbackLeft: action.payload.message};\r\n\r\n        case 'GET_FEEDBACK_LIST_SUCCESS':\r\n            console.log(action.payload);\r\n            return {...state, feedbacksList: action.payload};\r\n\r\n        case 'GET_FEEDBACK_LIST_FAIL':\r\n            console.log(action.payload);\r\n            return {...state, feedbacksList: \"Не удалось загрузить отзывы.\"};\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default feedbacksReducer;","import { combineReducers } from 'redux';\r\nimport checkGoodsReducer from './checkGoods';\r\nimport countOfGoodsReducer from './countOfGoods';\r\nimport colorReducer from './colorOfGoods';\r\nimport countCostReducer from './countCost';\r\nimport makeOrderReducer from './order';\r\nimport feedbacksReducer from './feedbacks';\r\n\r\nexport default combineReducers({\r\n  checkGoodsReducer,\r\n  countOfGoodsReducer,\r\n  colorReducer,\r\n  countCostReducer,\r\n  makeOrderReducer,\r\n  feedbacksReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport combineReducers from '../reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst initialState = {\r\n  checkGoodsReducer: {\r\n    isChairChecked: false,\r\n    isFirstPillowChecked: false,\r\n    isSecondPillowChecked: false,\r\n  },\r\n  countCostReducer: {\r\n    costOfChair: 0,\r\n    costOfFirstPillow: 0,\r\n    costOfSecondPillow: 0\r\n  },\r\n  countOfGoodsReducer: {\r\n    countOfChairs: 1,\r\n    countOfFirstPillow: 1,\r\n    countOfSecondPillow: 1\r\n  },\r\n  colorReducer: {\r\n    chairColor: 'K360',\r\n    chairLegColor: 'K360',\r\n    firstPillowColor: 'rose',\r\n    secondPillowColor: 'rose',\r\n    countColorsOfChair: \"monochrome\"\r\n  },\r\n  makeOrderReducer: {\r\n    orderStatus: false\r\n  },\r\n  feedbacksReducer: {\r\n    isFeedbackLeft: false,\r\n    feedbacksList: []\r\n  }\r\n};\r\n\r\nconst store = createStore(combineReducers, initialState, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './js/store/index';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>\r\n  , document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}